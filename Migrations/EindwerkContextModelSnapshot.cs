// <auto-generated />
using System;
using Backend_Dev_Eindwerk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend_Dev_Eindwerk.Migrations
{
    [DbContext(typeof(EindwerkContext))]
    partial class EindwerkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.League", b =>
                {
                    b.Property<Guid>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeagueId");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            LeagueId = new Guid("38690d3d-15ca-4aa0-a78c-4dfd911ac6b7"),
                            Abbreviation = "LCS",
                            Name = "The League Championship Series",
                            Region = "USA"
                        },
                        new
                        {
                            LeagueId = new Guid("f4e30e73-e3ae-4237-9890-e0693acc552b"),
                            Abbreviation = "LEC",
                            Name = "The League of Legends European Championship",
                            Region = "Europe"
                        },
                        new
                        {
                            LeagueId = new Guid("03b1bd13-fa74-415f-b396-b8c11e7cbaba"),
                            Abbreviation = "LCk",
                            Name = "The League Champions Korea",
                            Region = "Korea"
                        });
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.LeagueSponsor", b =>
                {
                    b.Property<Guid>("LeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SponsorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LeagueId", "SponsorId");

                    b.HasIndex("SponsorId");

                    b.ToTable("LeagueSponsors");
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = new Guid("e84e806d-3ed6-43d0-8d99-2c107b020510"),
                            DateOfBirth = "1/1/1995",
                            Ign = "Jensen",
                            Name = "Jensen, Nicolaj",
                            Nationality = "Denmark",
                            TeamId = new Guid("5b22b05a-10bd-4e8a-aedd-07638ed0c510")
                        },
                        new
                        {
                            PlayerId = new Guid("1c12044f-9775-43b4-a6e3-2cc78677deb2"),
                            DateOfBirth = "9/9/1998",
                            Ign = "Armao",
                            Name = "Armao, Jonathan",
                            Nationality = "USA",
                            TeamId = new Guid("5b22b05a-10bd-4e8a-aedd-07638ed0c510")
                        },
                        new
                        {
                            PlayerId = new Guid("d60c5fd4-8bbe-4b97-9c2b-ca1182d26e72"),
                            DateOfBirth = "4/30/1995",
                            Ign = "Hylissang",
                            Name = "Iliev Galabov, Zdravets",
                            Nationality = "Bulgaria",
                            TeamId = new Guid("f8cc2164-dfff-4d27-b8e1-e21b882cc11b")
                        },
                        new
                        {
                            PlayerId = new Guid("814ebfff-17ec-4ba8-bdc2-759e616f48c4"),
                            DateOfBirth = "12/24/1998",
                            Ign = "Bwipo",
                            Name = "Rau, Gabriel",
                            Nationality = "Belgium",
                            TeamId = new Guid("f8cc2164-dfff-4d27-b8e1-e21b882cc11b")
                        },
                        new
                        {
                            PlayerId = new Guid("6a3cc443-c72c-438e-ac51-bd3f28ad9175"),
                            DateOfBirth = "12/22/1995",
                            Ign = "Khan",
                            Name = "Dong-ha, Kim",
                            Nationality = "Korea",
                            TeamId = new Guid("900d46ea-0778-43f0-9934-0ed25541a76e")
                        },
                        new
                        {
                            PlayerId = new Guid("07cdc167-7e4b-4b65-9bf4-2a70393c003f"),
                            DateOfBirth = "6/18/2001",
                            Ign = "Canyon",
                            Name = "Geon-bu, Kim",
                            Nationality = "Korea",
                            TeamId = new Guid("900d46ea-0778-43f0-9934-0ed25541a76e")
                        });
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.Sponsor", b =>
                {
                    b.Property<Guid>("SponsorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SponsorId");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.Team", b =>
                {
                    b.Property<Guid>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandOfOrigen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("5b22b05a-10bd-4e8a-aedd-07638ed0c510"),
                            Abbreviation = "TL",
                            LandOfOrigen = "The Netherlands",
                            LeagueId = new Guid("38690d3d-15ca-4aa0-a78c-4dfd911ac6b7"),
                            Name = "Team Liquid"
                        },
                        new
                        {
                            TeamId = new Guid("f8cc2164-dfff-4d27-b8e1-e21b882cc11b"),
                            Abbreviation = "FNC",
                            LandOfOrigen = "Great Britain",
                            LeagueId = new Guid("f4e30e73-e3ae-4237-9890-e0693acc552b"),
                            Name = "Fnatic"
                        },
                        new
                        {
                            TeamId = new Guid("900d46ea-0778-43f0-9934-0ed25541a76e"),
                            Abbreviation = "DWK",
                            LandOfOrigen = "Korea",
                            LeagueId = new Guid("03b1bd13-fa74-415f-b396-b8c11e7cbaba"),
                            Name = "Damwon Kia"
                        });
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.LeagueSponsor", b =>
                {
                    b.HasOne("Backend_Dev_Eindwerk.Models.League", null)
                        .WithMany("LeagueSponsors")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_Dev_Eindwerk.Models.Sponsor", "Sponsor")
                        .WithMany("LeagueSponsors")
                        .HasForeignKey("SponsorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.Player", b =>
                {
                    b.HasOne("Backend_Dev_Eindwerk.Models.Team", "team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("team");
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.League", b =>
                {
                    b.Navigation("LeagueSponsors");
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.Sponsor", b =>
                {
                    b.Navigation("LeagueSponsors");
                });

            modelBuilder.Entity("Backend_Dev_Eindwerk.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
